service: server
frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  region: sa-east-1
  stackName: calomentor
  apiName: calomentor-api
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
            - s3:*
            - ses:*
          Resource: "*"

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-step-functions
  - serverless-pseudo-parameters

functions:
  activate:
    handler: index.activateUser
    events:
      - http:
          path: user/activate/{id}
          method: patch
          cors: true
  createUser:
    handler: index.createUser
    events:
      - http:
          path: user
          method: post
          cors: true
  getUsers:
    handler: index.getUsers
    events:
      - http:
          path: user
          method: get
          cors: true
  getUserById:
    handler: index.getUserById
    events:
      - http:
          path: user/{id}
          method: get
          cors: true
  deleteUserById:
    handler: index.deleteUserById
    events:
      - http:
          path: user/{id}
          method: delete
          cors: true
  updateUserById:
    handler: index.updateUserById
    events:
      - http:
          path: user/{id}
          method: put
          cors: true
  mentorshipConfirmation:
    handler: index.mentorshipConfirmation
  mentorshipTest:
    handler: index.mentorshipConfirmation
    events:
      - http:
          path: mentorship/test
          method: post
          cors: true
  addTimeSlot:
    handler: index.addTimeSlot
    events:
      - http:
          path: time-slot
          method: post
          cors: true
  getTimeSlotsByUserId:
    handler: index.getTimeSlotsByUser
    events:
      - http:
          path: time-slot/{id}
          method: get
          cors: true
  updateTimeSlot:
    handler: index.updateSlot
    events:
      - http:
          path: time-slot
          method: patch
          cors: true

resources:
  Resources:
    CalomentorUserDynamoDB:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: user
    CalomentorTimeSlotDynamoDB:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: time-slots
    CalomentorMentorshipDynamoDB:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: mentorship
